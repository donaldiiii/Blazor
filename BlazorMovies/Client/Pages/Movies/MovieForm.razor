
<EditForm Model="Movie" OnValidSubmit="onValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="Title">Title</label>
        <div>
            <InputText class="form-control" @bind-Value="@Movie.Title" />
            <ValidationMessage For="@(()=> Movie.Title)" />
        </div>
    </div>
    <div class="form-group">
        <label for="In Theaters">In Theaters</label>
        <div>
            <InputCheckbox class="form-control" @bind-Value="@Movie.InTheaters" />
            <ValidationMessage For="@(()=> Movie.InTheaters)" />
        </div>
    </div>
    <div class="form-group">
        <label for="Trailer">Trailer</label>
        <div>
            <InputText class="form-control" @bind-Value="@Movie.Trailer" />
            <ValidationMessage For="@(()=> Movie.Trailer)" />
        </div>
    </div>
    <div class="form-group">
        <label for="ReleaseDate">ReleaseDate</label>
        <div>
            <InputDate class="form-control" @bind-Value="@Movie.ReleaseDate" />
            <ValidationMessage For="@(()=> Movie.ReleaseDate)" />
        </div>
    </div>
    <div class="form-group">
        <InputImg Label="Picture" OnSelectedImage="PosterSelected" ImageUrl="@imageUrl"></InputImg>
    </div>
    <div class="form-group form-markdown">
        <InputMarkdown @bind-Value="Movie.Summary"
                       Label="Biography"
                       For="@(()=> Movie.Summary )" />
    </div>
    <button class="btn btn-primary" type="submit">Submit</button>
</EditForm>
@code {
    [Parameter] public Movie Movie { get; set; }
    [Parameter] public EventCallback onValidSubmit { get; set; }

    string imageUrl;
    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(Movie.Poster))
        {
            imageUrl = Movie.Poster;
            Movie.Poster = null;
        }
    }
    private void PosterSelected(string imageBase64)
    {
        Movie.Poster = imageBase64;
        imageUrl = null;
    }

}
